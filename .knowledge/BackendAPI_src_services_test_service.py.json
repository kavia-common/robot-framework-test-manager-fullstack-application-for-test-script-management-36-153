{"is_source_file": true, "format": "Python", "description": "Source code for a Python service class 'TestService' that manages test scripts and test cases, including create, retrieve, update, delete, and list operations with database interaction via SQLAlchemy ORM.", "external_files": ["src/database/models", "src/schemas/test_schemas"], "external_methods": ["TestScriptResponse.model_validate", "TestCaseResponse.model_validate"], "published": ["test_service"], "classes": [{"name": "TestService", "description": "A class encapsulating methods to manage test scripts and test cases with database operations."}], "methods": [{"name": "TestScriptResponse create_test_script(self, db: Session, test_data: TestScriptCreate, user_id: str)", "description": "Creates a new test script record in the database.", "scope": "TestService", "scopeKind": "class"}, {"name": "Optional[TestScriptResponse] get_test_script(self, db: Session, test_id: str)", "description": "Retrieves a test script by its ID.", "scope": "TestService", "scopeKind": "class"}, {"name": "PaginationResponse list_test_scripts(self, db: Session, page: int = 1, page_size: int = 20)", "description": "Lists test scripts with pagination support.", "scope": "TestService", "scopeKind": "class"}, {"name": "Optional[TestScriptResponse] update_test_script(self, db: Session, test_id: str, test_data: TestScriptUpdate)", "description": "Updates an existing test script identified by ID.", "scope": "TestService", "scopeKind": "class"}, {"name": "bool delete_test_script(self, db: Session, test_id: str)", "description": "Deletes a test script by ID.", "scope": "TestService", "scopeKind": "class"}, {"name": "TestCaseResponse create_test_case(self, db: Session, case_data: TestCaseCreate)", "description": "Creates a new test case linked to a test script.", "scope": "TestService", "scopeKind": "class"}, {"name": "Optional[TestCaseResponse] get_test_case(self, db: Session, case_id: str)", "description": "Retrieves a test case by its ID.", "scope": "TestService", "scopeKind": "class"}, {"name": "PaginationResponse list_test_cases( self, db: Session, test_script_id: Optional[str] = None, name: Optional[str] = None, page: int = 1, page_size: int = 20 )", "description": "Lists test cases with optional filters and pagination.", "scope": "TestService", "scopeKind": "class"}, {"name": "Optional[TestCaseResponse] update_test_case(self, db: Session, case_id: str, case_data: TestCaseUpdate)", "description": "Updates an existing test case identified by ID.", "scope": "TestService", "scopeKind": "class"}, {"name": "bool delete_test_case(self, db: Session, case_id: str)", "description": "Deletes a test case by ID.", "scope": "TestService", "scopeKind": "class"}], "calls": ["db.query", "db.add", "db.commit", "db.refresh", "db.delete"], "search-terms": ["TestService", "test_script", "test_case", "database", "CRUD", "pagination", "pytest", "SQLAlchemy"], "state": 2, "file_id": 15, "knowledge_revision": 84, "git_revision": "", "revision_history": [{"31": ""}, {"80": ""}, {"84": ""}], "ctags": [{"_type": "tag", "name": "TestService", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/test_service.py", "pattern": "/^class TestService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_test_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/test_service.py", "pattern": "/^    def create_test_case(self, db: Session, case_data: TestCaseCreate) -> TestCaseResponse:$/", "language": "Python", "typeref": "typename:TestCaseResponse", "kind": "member", "signature": "(self, db: Session, case_data: TestCaseCreate)", "scope": "TestService", "scopeKind": "class"}, {"_type": "tag", "name": "create_test_script", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/test_service.py", "pattern": "/^    def create_test_script(self, db: Session, test_data: TestScriptCreate, user_id: str) -> Test/", "language": "Python", "typeref": "typename:TestScriptResponse", "kind": "member", "signature": "(self, db: Session, test_data: TestScriptCreate, user_id: str)", "scope": "TestService", "scopeKind": "class"}, {"_type": "tag", "name": "delete_test_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/test_service.py", "pattern": "/^    def delete_test_case(self, db: Session, case_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, db: Session, case_id: str)", "scope": "TestService", "scopeKind": "class"}, {"_type": "tag", "name": "delete_test_script", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/test_service.py", "pattern": "/^    def delete_test_script(self, db: Session, test_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, db: Session, test_id: str)", "scope": "TestService", "scopeKind": "class"}, {"_type": "tag", "name": "get_test_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/test_service.py", "pattern": "/^    def get_test_case(self, db: Session, case_id: str) -> Optional[TestCaseResponse]:$/", "language": "Python", "typeref": "typename:Optional[TestCaseResponse]", "kind": "member", "signature": "(self, db: Session, case_id: str)", "scope": "TestService", "scopeKind": "class"}, {"_type": "tag", "name": "get_test_script", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/test_service.py", "pattern": "/^    def get_test_script(self, db: Session, test_id: str) -> Optional[TestScriptResponse]:$/", "language": "Python", "typeref": "typename:Optional[TestScriptResponse]", "kind": "member", "signature": "(self, db: Session, test_id: str)", "scope": "TestService", "scopeKind": "class"}, {"_type": "tag", "name": "list_test_cases", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/test_service.py", "pattern": "/^    def list_test_cases($/", "language": "Python", "typeref": "typename:PaginationResponse", "kind": "member", "signature": "( self, db: Session, test_script_id: Optional[str] = None, name: Optional[str] = None, page: int = 1, page_size: int = 20 )", "scope": "TestService", "scopeKind": "class"}, {"_type": "tag", "name": "list_test_scripts", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/test_service.py", "pattern": "/^    def list_test_scripts(self, db: Session, page: int = 1, page_size: int = 20) -> PaginationRe/", "language": "Python", "typeref": "typename:PaginationResponse", "kind": "member", "signature": "(self, db: Session, page: int = 1, page_size: int = 20)", "scope": "TestService", "scopeKind": "class"}, {"_type": "tag", "name": "test_service", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/test_service.py", "pattern": "/^test_service = TestService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_test_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/test_service.py", "pattern": "/^    def update_test_case(self, db: Session, case_id: str, case_data: TestCaseUpdate) -> Optional/", "language": "Python", "typeref": "typename:Optional[TestCaseResponse]", "kind": "member", "signature": "(self, db: Session, case_id: str, case_data: TestCaseUpdate)", "scope": "TestService", "scopeKind": "class"}, {"_type": "tag", "name": "update_test_script", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/test_service.py", "pattern": "/^    def update_test_script(self, db: Session, test_id: str, test_data: TestScriptUpdate) -> Opti/", "language": "Python", "typeref": "typename:Optional[TestScriptResponse]", "kind": "member", "signature": "(self, db: Session, test_id: str, test_data: TestScriptUpdate)", "scope": "TestService", "scopeKind": "class"}], "hash": "e3fe610ae2051d59ac40f11c7f7bd2c3", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/services/test_service.py", "fields": [{"name": "test_service = TestService()", "scope": "", "scopeKind": "", "description": "unavailable"}]}