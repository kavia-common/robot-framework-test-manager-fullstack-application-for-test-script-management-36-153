{"is_source_file": true, "format": "Python", "description": "This source file defines the MinIOService class responsible for interacting with MinIO object storage, including operations such as upload, download, delete, URL generation, existence check, and listing of files. It also creates a singleton instance of this class.", "external_files": ["minio", "minio.error"], "external_methods": ["minio.Minio", "minio.error.S3Error"], "published": ["minio_service"], "classes": [{"name": "MinIOService", "description": "Service for managing file operations with MinIO object storage."}], "methods": [{"name": "__init__(self)", "description": "Initializes the MinIOService with configuration from environment variables and sets up internal state.", "scope": "MinIOService", "scopeKind": "class"}, {"name": "Minio client(self)", "description": "Provides lazy initialization of the Minio client instance.", "scope": "MinIOService", "scopeKind": "class"}, {"name": "_ensure_bucket_exists(self)", "description": "Checks if the configured bucket exists; creates it if not.", "scope": "MinIOService", "scopeKind": "class"}, {"name": "str upload_file(self, file_data: BinaryIO, object_name: str, content_type: str = \"application/octet-stream\")", "description": "Uploads a file to MinIO, returning the object name.", "scope": "MinIOService", "scopeKind": "class"}, {"name": "bytes download_file(self, object_name: str)", "description": "Downloads a file from MinIO as bytes.", "scope": "MinIOService", "scopeKind": "class"}, {"name": "bool delete_file(self, object_name: str)", "description": "Deletes a specified file from MinIO.", "scope": "MinIOService", "scopeKind": "class"}, {"name": "str get_file_url(self, object_name: str, expires_in_seconds: int = 3600)", "description": "Generates a presigned URL for accessing a file.", "scope": "MinIOService", "scopeKind": "class"}, {"name": "bool file_exists(self, object_name: str)", "description": "Checks whether a specific file exists in MinIO.", "scope": "MinIOService", "scopeKind": "class"}, {"name": "list list_files(self, prefix: str = \"\")", "description": "Lists files in the bucket, optionally filtered by prefix.", "scope": "MinIOService", "scopeKind": "class"}], "calls": ["self.client.bucket_exists", "self.client.make_bucket", "self.client.put_object", "self.client.get_object", "self.client.remove_object", "self.client.presigned_get_object", "self.client.stat_object", "self.client.list_objects"], "search-terms": ["MinIO", "MinIOService", "file upload", "download", "presigned URL", "bucket management"], "state": 2, "file_id": 9, "knowledge_revision": 91, "git_revision": "a629b5b37c9b16cb48c78d6cf5fe937d10ef54ad", "revision_history": [{"19": ""}, {"27": ""}, {"91": "a629b5b37c9b16cb48c78d6cf5fe937d10ef54ad"}], "ctags": [{"_type": "tag", "name": "MinIOService", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/minio_service.py", "pattern": "/^class MinIOService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/minio_service.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "MinIOService", "scopeKind": "class"}, {"_type": "tag", "name": "_ensure_bucket_exists", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/minio_service.py", "pattern": "/^    def _ensure_bucket_exists(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "MinIOService", "scopeKind": "class"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/minio_service.py", "pattern": "/^    def client(self) -> Minio:$/", "language": "Python", "typeref": "typename:Minio", "kind": "member", "signature": "(self)", "scope": "MinIOService", "scopeKind": "class"}, {"_type": "tag", "name": "delete_file", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/minio_service.py", "pattern": "/^    def delete_file(self, object_name: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, object_name: str)", "scope": "MinIOService", "scopeKind": "class"}, {"_type": "tag", "name": "download_file", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/minio_service.py", "pattern": "/^    def download_file(self, object_name: str) -> bytes:$/", "language": "Python", "typeref": "typename:bytes", "kind": "member", "signature": "(self, object_name: str)", "scope": "MinIOService", "scopeKind": "class"}, {"_type": "tag", "name": "file_exists", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/minio_service.py", "pattern": "/^    def file_exists(self, object_name: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, object_name: str)", "scope": "MinIOService", "scopeKind": "class"}, {"_type": "tag", "name": "get_file_url", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/minio_service.py", "pattern": "/^    def get_file_url(self, object_name: str, expires_in_seconds: int = 3600) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, object_name: str, expires_in_seconds: int = 3600)", "scope": "MinIOService", "scopeKind": "class"}, {"_type": "tag", "name": "list_files", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/minio_service.py", "pattern": "/^    def list_files(self, prefix: str = \"\") -> list:$/", "language": "Python", "typeref": "typename:list", "kind": "member", "signature": "(self, prefix: str = \"\")", "scope": "MinIOService", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/minio_service.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "minio_service", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/minio_service.py", "pattern": "/^minio_service = MinIOService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "upload_file", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/minio_service.py", "pattern": "/^    def upload_file(self, file_data: BinaryIO, object_name: str, content_type: str = \"applicatio/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, file_data: BinaryIO, object_name: str, content_type: str = \"application/octet-stream\")", "scope": "MinIOService", "scopeKind": "class"}], "hash": "5f66e6d3f78cb0c878cb250655461e53", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/services/minio_service.py", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "minio_service = MinIOService()", "scope": "", "scopeKind": "", "description": "unavailable"}]}