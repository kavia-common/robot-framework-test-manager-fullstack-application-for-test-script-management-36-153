{"is_source_file": true, "format": "Python", "description": "This file provides JWT token handling utilities such as creating, verifying, and decoding access tokens, along with password hashing functions. It is part of an authentication subsystem in a larger backend application.", "external_files": ["jose", "passlib", "os"], "external_methods": ["jwt.encode", "jwt.decode", "jwt.verify", "CryptContext.verify", "CryptContext.hash"], "published": ["verify_password", "get_password_hash", "create_access_token", "verify_token", "decode_access_token"], "classes": [], "methods": [{"name": "bool verify_password(plain_password: str, hashed_password: str)", "description": "Verifies a plaintext password against a hashed password using bcrypt.", "scope": "", "scopeKind": ""}, {"name": "str get_password_hash(password: str)", "description": "Generates a bcrypt hash of the provided plaintext password.", "scope": "", "scopeKind": ""}, {"name": "str create_access_token(data: Dict[str, Any], expires_delta: Optional[timedelta] = None)", "description": "Creates a JWT access token with an optional expiration period.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] verify_token(token: str)", "description": "Decodes and verifies the validity of a JWT token.", "scope": "", "scopeKind": ""}, {"name": "Optional[str] decode_access_token(token: str)", "description": "Decodes the JWT token and extracts the 'sub' claim, typically the username.", "scope": "", "scopeKind": ""}], "calls": ["jwt.encode", "jwt.decode", "pwd_context.verify", "pwd_context.hash"], "search-terms": ["JWT token creation", "JWT verification", "password hashing", "JWT secret key", "JWT algorithm", "access token expiry"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/auth/jwt_handler.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv(\"ACCESS_TOKEN_EXPIRE_MINUTES\", \"30\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/auth/jwt_handler.py", "pattern": "/^ALGORITHM = os.getenv(\"ALGORITHM\", \"HS256\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/auth/jwt_handler.py", "pattern": "/^SECRET_KEY = os.getenv(\"SECRET_KEY\", \"your-secret-key-here\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/auth/jwt_handler.py", "pattern": "/^def create_access_token(data: Dict[str, Any], expires_delta: Optional[timedelta] = None) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(data: Dict[str, Any], expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "decode_access_token", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/auth/jwt_handler.py", "pattern": "/^def decode_access_token(token: str) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/auth/jwt_handler.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/auth/jwt_handler.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/auth/jwt_handler.py", "pattern": "/^def verify_password(plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, hashed_password: str)"}, {"_type": "tag", "name": "verify_token", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/auth/jwt_handler.py", "pattern": "/^def verify_token(token: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(token: str)"}], "hash": "c58f6fb1796fa60b8084898383472b9b", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/auth/jwt_handler.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv(\"ACCESS_TOKEN_EXPIRE_MINUTES\", \"30\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = os.getenv(\"ALGORITHM\", \"HS256\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = os.getenv(\"SECRET_KEY\", \"your-secret-key-here\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"15": ""}]}