{"is_source_file": true, "format": "Python", "description": "This file defines authentication-related API endpoints such as login, get current user info, and logout for a FastAPI application. It uses Pydantic models for request and response validation and provides dummy implementations without actual authentication logic.", "external_files": ["src/database/connection.py"], "external_methods": ["get_db"], "published": ["router"], "classes": [{"name": "Token", "description": "Pydantic model representing an access token with its type."}, {"name": "UserResponse", "description": "Pydantic model representing user information such as user ID, username, and roles."}, {"name": "LoginRequest", "description": "Pydantic model for login request containing username and password."}], "methods": [{"name": "login( login_data: LoginRequest, db: Session = Depends(get_db) )", "description": "Endpoint for user login that returns a dummy token without actual authentication.", "scope": "", "scopeKind": ""}, {"name": "get_current_user_info( db: Session = Depends(get_db) )", "description": "Endpoint to retrieve dummy current user info without authentication.", "scope": "", "scopeKind": ""}, {"name": "logout()", "description": "Endpoint for user logout which performs no operation.", "scope": "", "scopeKind": ""}], "calls": ["get_db"], "search-terms": ["auth.py", "FastAPI", "authentication", "dummy token", "public endpoints", "APIRouter", "pydantic"], "state": 2, "file_id": 12, "knowledge_revision": 101, "git_revision": "a629b5b37c9b16cb48c78d6cf5fe937d10ef54ad", "revision_history": [{"30": ""}, {"37": ""}, {"84": "a629b5b37c9b16cb48c78d6cf5fe937d10ef54ad"}, {"101": "a629b5b37c9b16cb48c78d6cf5fe937d10ef54ad"}], "ctags": [{"_type": "tag", "name": "LoginRequest", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/auth.py", "pattern": "/^class LoginRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/auth.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserResponse", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/auth.py", "pattern": "/^class UserResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "get_current_user_info", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/auth.py", "pattern": "/^async def get_current_user_info($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/auth.py", "pattern": "/^async def login($/", "language": "Python", "kind": "function", "signature": "( login_data: LoginRequest, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/auth.py", "pattern": "/^async def logout():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/auth.py", "pattern": "/^router = APIRouter(prefix=\"\\/auth\", tags=[\"authentication\"])$/", "language": "Python", "kind": "variable"}], "hash": "81e8587aa4ce496aa137af875d6fb250", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/api/routers/auth.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/auth\", tags=[\"authentication\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}