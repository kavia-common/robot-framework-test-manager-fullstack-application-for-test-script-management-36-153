{"is_source_file": true, "format": "Python", "description": "This file manages database connection setup for a Python project using SQLAlchemy. It creates an engine, session factory, base class for models, and provides functions to get a database session and initialize the database schema.", "external_files": ["src.core.config", "src.database.models"], "external_methods": ["settings.DATABASE_URL"], "published": ["get_db", "init_db"], "classes": [{"name": "Base", "description": "Declarative base class for defining ORM models."}], "methods": [{"name": "get_db()", "description": "Provides a database session for dependency injection; ensures session is closed after use.", "scope": "", "scopeKind": ""}, {"name": "init_db()", "description": "Creates all tables in the database based on registered models; should be called on startup.", "scope": "", "scopeKind": ""}], "calls": ["create_engine", "sessionmaker", "declarative_base", "settings.DATABASE_URL", "Base.metadata.create_all"], "search-terms": ["SQLAlchemy engine", "session factory", "database initialization", "connection management", "models registration"], "state": 2, "file_id": 7, "knowledge_revision": 77, "git_revision": "", "revision_history": [{"15": ""}, {"77": ""}], "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^engine = create_engine($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "init_db", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^def init_db():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "6b98ec5ee31a16ec778477b62df33845", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/database/connection.py", "fields": [{"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine = create_engine(", "scope": "", "scopeKind": "", "description": "unavailable"}]}