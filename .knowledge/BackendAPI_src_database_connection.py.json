{"is_source_file": true, "format": "Python", "description": "This file manages database connection setup, session management, and database initialization for a SQLAlchemy-based ORM system within a Python project. It includes functions for creating tables, obtaining database sessions, and initializing default data such as roles.", "external_files": ["./models"], "external_methods": ["Base.metadata.create_all", "db.query", "db.add", "db.commit", "db.rollback", "db.close", "Role", "UserRole"], "published": ["create_tables", "get_db", "init_db"], "classes": [], "methods": [{"name": "create_tables()", "description": "Creates all database tables based on ORM models.", "scope": "", "scopeKind": ""}, {"name": "Generator[Session,None,None] get_db()", "description": "Provides a generator yielding a database session, ensuring proper closure after use.", "scope": "", "scopeKind": ""}, {"name": "get_db_context()", "description": "Provides a context manager for database sessions with commit/rollback handling outside FastAPI.", "scope": "", "scopeKind": ""}, {"name": "init_db()", "description": "Initializes the database with default roles if they do not already exist.", "scope": "", "scopeKind": ""}], "calls": ["Base.metadata.create_all", "db.query", "db.add", "db.commit", "db.rollback", "db.close"], "search-terms": ["create_engine", "sessionmaker", "get_db", "init_db", "database connection", "SQLAlchemy setup"], "state": 2, "file_id": 6, "knowledge_revision": 25, "git_revision": "", "revision_history": [{"13": ""}, {"25": ""}], "ctags": [{"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^DATABASE_URL = os.getenv(\"DATABASE_URL\", \"postgresql:\\/\\/username:password@localhost:5432\\/test_/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UserRoleEnum", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^    from .models import Role, UserRole as UserRoleEnum$/", "file": true, "language": "Python", "kind": "unknown", "scope": "init_db", "scopeKind": "function", "nameref": "unknown:UserRole"}, {"_type": "tag", "name": "create_tables", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^def create_tables():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^engine = create_engine($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^def get_db() -> Generator[Session, None, None]:$/", "language": "Python", "typeref": "typename:Generator[Session,None,None]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_db_context", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^def get_db_context():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "init_db", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/database/connection.py", "pattern": "/^def init_db():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "91d72f4f4a8c97ef06f48063fe0ccce3", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/database/connection.py", "fields": [{"name": "DATABASE_URL = os.getenv(\"DATABASE_URL\", \"postgresql:\\/\\/username:password@localhost:5432\\/test_/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine = create_engine(", "scope": "", "scopeKind": "", "description": "unavailable"}]}