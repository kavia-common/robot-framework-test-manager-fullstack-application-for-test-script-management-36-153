{"is_source_file": true, "format": "Python", "description": "This file serves as an initializer for the `auth` package, exposing various authentication and authorization functions such as JWT token handling, password hashing, and RBAC, by importing specific functions and classes from subordinate modules.", "external_files": ["jwt_handler.py", "rbac.py"], "external_methods": ["verify_password", "get_password_hash", "create_access_token", "verify_token", "decode_access_token", "get_current_user", "require_permission"], "published": ["verify_password", "get_password_hash", "create_access_token", "verify_token", "decode_access_token", "get_current_user", "require_permission", "Permission"], "classes": [{"name": "Permission", "description": "An enumeration or class representing different permissions for role-based access control (RBAC)."}], "methods": [{"name": "verify_password", "description": "Function to verify a user's password against a stored hash.", "external": true}, {"name": "get_password_hash", "description": "Function to generate a password hash for secure storage.", "external": true}, {"name": "create_access_token", "description": "Function to generate a JWT access token for authenticated users.", "external": true}, {"name": "verify_token", "description": "Function to verify the validity of a JWT token.", "external": true}, {"name": "decode_access_token", "description": "Function to decode a JWT token to extract its payload.", "external": true}, {"name": "get_current_user", "description": "Function to retrieve the current authenticated user based on the token.", "external": true}, {"name": "require_permission", "description": "Decorator or function to enforce role-based permission requirements.", "external": true}], "calls": ["jwt_handler.verify_password", "jwt_handler.get_password_hash", "jwt_handler.create_access_token", "jwt_handler.verify_token", "jwt_handler.decode_access_token", "rbac.get_current_user", "rbac.require_permission"], "search-terms": ["JWT", "password hashing", "RBAC", "authentication", "authorization", "auth package", "decode token"], "state": 2, "file_id": 24, "knowledge_revision": 73, "git_revision": "", "revision_history": [{"62": ""}, {"73": ""}], "ctags": [{"_type": "tag", "name": "__all__", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/auth/__init__.py", "pattern": "/^__all__ = [$/", "language": "Python", "kind": "variable"}], "hash": "ad4122a4ba58320c20b497fed272349f", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/auth/__init__.py", "fields": [{"name": "__all__ = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}