{"is_source_file": true, "format": "Python", "description": "This source file defines API endpoints related to managing a test execution queue within a web application. It uses FastAPI to handle HTTP requests for listing, adding, and removing queue items, and interacts with database models, services, and authorization modules.", "external_files": [".../database/connection.py", ".../database/models.py", ".../auth/rbac.py", ".../services/queue_service.py"], "external_methods": ["get_db", "User", "require_permission", "Permission", "queue_service.get_queue_status", "queue_service.add_to_queue", "queue_service.remove_from_queue"], "published": ["router"], "classes": [{"name": "QueueRequest", "description": "Data model for requests to add items to the queue, including case IDs, priority, and config."}, {"name": "QueueItemResponse", "description": "Response model representing a queued test case with status and timestamps."}, {"name": "StandardResponse", "description": "Generic response model indicating success or failure and including data or error info."}], "methods": [{"name": "list_queue_items( current_user: User = Depends(require_permission(Permission.MANAGE_QUEUE)), db: Session = Depends(get_db) )", "description": "Handles GET requests to list current queue items.", "scope": "", "scopeKind": ""}, {"name": "add_to_queue( queue_request: QueueRequest, current_user: User = Depends(require_permission(Permission.MANAGE_QUEUE)), db: Session = Depends(get_db) )", "description": "Handles POST requests to add test cases to the queue.", "scope": "", "scopeKind": ""}, {"name": "remove_from_queue( case_id: str, current_user: User = Depends(require_permission(Permission.MANAGE_QUEUE)), db: Session = Depends(get_db) )", "description": "Handles DELETE requests to remove a test case from the queue.", "scope": "", "scopeKind": ""}], "calls": ["queue_service.get_queue_status()", "queue_service.add_to_queue(case_ids, priority, config)", "queue_service.remove_from_queue(case_id)"], "search-terms": ["queue", "FastAPI", "queue management API", "test case queue", "queue endpoint", "APIRouter", "queue service"], "state": 2, "file_id": 16, "knowledge_revision": 42, "git_revision": "", "ctags": [{"_type": "tag", "name": "QueueItemResponse", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/queue.py", "pattern": "/^class QueueItemResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "QueueRequest", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/queue.py", "pattern": "/^class QueueRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "StandardResponse", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/queue.py", "pattern": "/^class StandardResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "add_to_queue", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/queue.py", "pattern": "/^async def add_to_queue($/", "language": "Python", "kind": "function", "signature": "( queue_request: QueueRequest, current_user: User = Depends(require_permission(Permission.MANAGE_QUEUE)), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "completed_at", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/queue.py", "pattern": "/^    completed_at: str = None$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "QueueItemResponse", "scopeKind": "class"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/queue.py", "pattern": "/^    config: Dict[str, Any] = {}$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "QueueRequest", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/queue.py", "pattern": "/^    error: str = None$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "StandardResponse", "scopeKind": "class"}, {"_type": "tag", "name": "list_queue_items", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/queue.py", "pattern": "/^async def list_queue_items($/", "language": "Python", "kind": "function", "signature": "( current_user: User = Depends(require_permission(Permission.MANAGE_QUEUE)), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "priority", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/queue.py", "pattern": "/^    priority: int = 1$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "QueueRequest", "scopeKind": "class"}, {"_type": "tag", "name": "remove_from_queue", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/queue.py", "pattern": "/^async def remove_from_queue($/", "language": "Python", "kind": "function", "signature": "( case_id: str, current_user: User = Depends(require_permission(Permission.MANAGE_QUEUE)), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/queue.py", "pattern": "/^router = APIRouter(prefix=\"\\/queue\", tags=[\"queue\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "started_at", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/queue.py", "pattern": "/^    started_at: str = None$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "QueueItemResponse", "scopeKind": "class"}], "hash": "0af4ebf457a5611807acf8a538dd72a4", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/api/routers/queue.py", "fields": [{"name": "str completed_at", "scope": "QueueItemResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str, Any] config", "scope": "QueueRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str error", "scope": "StandardResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "int priority", "scope": "QueueRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(prefix=\"\\/queue\", tags=[\"queue\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str started_at", "scope": "QueueItemResponse", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"42": ""}]}