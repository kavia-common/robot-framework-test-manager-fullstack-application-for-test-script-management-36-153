{"is_source_file": true, "format": "Python", "description": "This file implements authentication functionality for a FastAPI backend, including JWT token creation, user validation, role-based access control, and API route definitions for login, user info retrieval, and logout.", "external_files": ["app_config.py", "database.py", "models.py"], "external_methods": ["get_settings", "get_db", "User", "jwt.encode", "jwt.decode", "pwd_context.verify", "pwd_context.hash"], "published": ["verify_password", "get_password_hash", "create_access_token", "get_user_by_username", "get_current_user", "get_current_active_user", "require_roles"], "classes": [{"name": "Token", "description": "Data model representing JWT access token and token type."}, {"name": "UserOut", "description": "Data model containing public user information including ID, username, and roles."}], "methods": [{"name": "bool verify_password(plain_password: str, password_hash: str)", "description": "Verifies a plaintext password against a hash.", "scope": "", "scopeKind": ""}, {"name": "str get_password_hash(password: str)", "description": "Hashes a password using Passlib.", "scope": "", "scopeKind": ""}, {"name": "str create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Creates a JWT access token with optional expiration.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] get_user_by_username(db: Session, username: str)", "description": "Retrieves a User object from the database by username.", "scope": "", "scopeKind": ""}, {"name": "User get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))", "description": "Decodes a JWT token and fetches the current user from the database.", "scope": "", "scopeKind": ""}, {"name": "User get_current_active_user(user: User = Depends(get_current_user))", "description": "Returns the active user, placeholder for checking if user is disabled.", "scope": "", "scopeKind": ""}, {"name": "require_roles(*roles: str)", "description": "Factory function to enforce role-based authorization.", "scope": "", "scopeKind": ""}, {"name": "User _inner(user: User = Depends(get_current_active_user))", "scope": "require_roles", "scopeKind": "function", "description": "unavailable"}, {"name": "login(form_data: dict = Depends(), db: Session = Depends(get_db))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logout(_: User = Depends(get_current_active_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "me(user: User = Depends(get_current_active_user))", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["jwt.encode", "jwt.decode", "get_user_by_username", "verify_password"], "search-terms": ["JWT authentication", "FastAPI security", "OAuth2PasswordBearer", "role-based access", "auth router", "token creation"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserOut", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^class UserOut(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_inner", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^    def _inner(user: User = Depends(get_current_active_user)) -> User:$/", "file": true, "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(user: User = Depends(get_current_active_user))", "scope": "require_roles", "scopeKind": "function"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^    access_token: str = Field(..., description=\"JWT access token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "auth_router", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^auth_router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "get_current_active_user", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^def get_current_active_user(user: User = Depends(get_current_user)) -> User:$/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^def get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db)) -> User/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "get_user_by_username", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^def get_user_by_username(db: Session, username: str) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, username: str)"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^def login(form_data: dict = Depends(), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(form_data: dict = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^def logout(_: User = Depends(get_current_active_user)):$/", "language": "Python", "kind": "function", "signature": "(_: User = Depends(get_current_active_user))"}, {"_type": "tag", "name": "me", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^def me(user: User = Depends(get_current_active_user)):$/", "language": "Python", "kind": "function", "signature": "(user: User = Depends(get_current_active_user))"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "require_roles", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^def require_roles(*roles: str):$/", "language": "Python", "kind": "function", "signature": "(*roles: str)"}, {"_type": "tag", "name": "roles", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^    roles: List[str] = Field(..., description=\"List with one role: admin|tester|viewer\")$/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "UserOut", "scopeKind": "class"}, {"_type": "tag", "name": "settings", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^settings = get_settings()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^    token_type: str = Field(..., description=\"Token type, always 'bearer'\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^    user_id: int = Field(..., description=\"User ID\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "UserOut", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^    username: str = Field(..., description=\"User name\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserOut", "scopeKind": "class"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/auth.py", "pattern": "/^def verify_password(plain_password: str, password_hash: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, password_hash: str)"}], "hash": "b11130b80cddd0040e947bc5a1471db8", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/api/auth.py", "fields": [{"name": "str access_token", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "auth_router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[str] roles", "scope": "UserOut", "scopeKind": "class", "description": "unavailable"}, {"name": "settings = get_settings()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str token_type", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "int user_id", "scope": "UserOut", "scopeKind": "class", "description": "unavailable"}, {"name": "str username", "scope": "UserOut", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"19": ""}]}