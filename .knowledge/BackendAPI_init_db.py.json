{"is_source_file": true, "format": "Python", "description": "This script initializes the database for a test management application, creating tables, default roles, and an admin user.", "external_files": ["src/database/connection.py", "src/database/models.py", "src/auth/jwt_handler.py", "dotenv", "pathlib", "os", "sys"], "external_methods": ["create_tables()", "init_db()", "get_db_context()", "get_password_hash()"], "published": [], "classes": [{"name": "User", "description": "Represents a user in the system."}, {"name": "Role", "description": "Represents a role in the system."}, {"name": "UserRole", "description": "Associates users with roles."}, {"name": "UserRoleEnum", "description": "Enum defining role names such as ADMIN."}], "methods": [{"name": "create_admin_user()", "description": "Creates a default admin user if it doesn't already exist.", "scope": "", "scopeKind": ""}, {"name": "main()", "description": "Main function that initializes the database and sets up default data.", "scope": "", "scopeKind": ""}], "calls": ["create_tables()", "init_db()", "get_db_context()", "get_password_hash()", "load_dotenv()"], "search-terms": ["init_db", "create_tables", "create_admin_user", "database initialization", "admin user creation", "database setup"], "state": 2, "file_id": 29, "knowledge_revision": 81, "git_revision": "a629b5b37c9b16cb48c78d6cf5fe937d10ef54ad", "revision_history": [{"72": ""}, {"81": "a629b5b37c9b16cb48c78d6cf5fe937d10ef54ad"}], "ctags": [{"_type": "tag", "name": "create_admin_user", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/init_db.py", "pattern": "/^def create_admin_user():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/init_db.py", "pattern": "/^def main():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "d8a803ec14fa184907c8e4bd10052429", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/init_db.py"}