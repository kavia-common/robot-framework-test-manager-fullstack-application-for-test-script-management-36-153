{"is_source_file": true, "format": "Python", "description": "This file defines FastAPI routes for managing test cases, including creation, listing with pagination, retrieval, updating, and deletion. It utilizes SQLAlchemy ORM models, Pydantic schemas for request/response validation, and includes permission-based access controls.", "external_files": [".../database/connection", ".../database/models", ".../auth/rbac"], "external_methods": ["get_db", "require_permission", "TestCase", "TestScript", "User"], "published": ["router", "create_test_case", "list_test_cases", "get_test_case", "update_test_case", "delete_test_case"], "classes": [{"name": "TestCaseCreate", "description": "Schema for creating a new test case, including test script ID, name, description, and variables."}, {"name": "TestCaseUpdate", "description": "Schema for updating an existing test case; fields are optional for partial updates."}, {"name": "TestCaseResponse", "description": "Schema for returning test case details, including ID, associated script, metadata, and timestamps."}, {"name": "StandardResponse", "description": "Standardized response schema indicating success status, data payload, and error information."}, {"name": "PaginationResponse", "description": "Schema for paginated list of test cases, including items, total count, current page, and page size."}], "methods": [{"name": "create_test_case( test_case_data: TestCaseCreate, current_user: User = Depends(require_permission(Permission.CREATE_TEST_CASE)), db: Session = Depends(get_db) )", "description": "Endpoint to create a new test case, with permission check, validation, and database insertion.", "scope": "", "scopeKind": ""}, {"name": "list_test_cases( test_script_id: Optional[str] = Query(None), name: Optional[str] = Query(None), page: int = Query(1, ge=1), page_size: int = Query(10, ge=1, le=100), current_user: User = Depends(require_permission(Permission.READ_TEST_CASE)), db: Session = Depends(get_db) )", "description": "Endpoint to retrieve a paginated list of test cases, with optional filtering by script ID and name.", "scope": "", "scopeKind": ""}, {"name": "get_test_case( case_id: str, current_user: User = Depends(require_permission(Permission.READ_TEST_CASE)), db: Session = Depends(get_db) )", "description": "Endpoint to fetch detailed information of a specific test case by ID.", "scope": "", "scopeKind": ""}, {"name": "update_test_case( case_id: str, test_case_data: TestCaseUpdate, current_user: User = Depends(require_permission(Permission.UPDATE_TEST_CASE)), db: Session = Depends(get_db) )", "description": "Endpoint to update fields of an existing test case, with permission check and error handling.", "scope": "", "scopeKind": ""}, {"name": "delete_test_case( case_id: str, current_user: User = Depends(require_permission(Permission.DELETE_TEST_CASE)), db: Session = Depends(get_db) )", "description": "Endpoint to delete a test case by ID, with permission check and error handling.", "scope": "", "scopeKind": ""}], "calls": ["db.query(TestScript)", "db.query(TestCase)", "TestCaseResponse.from_orm", "require_permission(Permission.CREATE_TEST_CASE)", "require_permission(Permission.READ_TEST_CASE)", "require_permission(Permission.UPDATE_TEST_CASE)", "require_permission(Permission.DELETE_TEST_CASE)"], "search-terms": ["FastAPI test case routes", "CRUD operations test cases", "TestCase Pydantic schemas", "Database ORM models", "Permission-based testing API"], "state": 2, "file_id": 14, "knowledge_revision": 38, "git_revision": "", "revision_history": [{"34": ""}, {"38": ""}], "ctags": [{"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "TestCaseResponse", "scopeKind": "class"}, {"_type": "tag", "name": "PaginationResponse", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^class PaginationResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "StandardResponse", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^class StandardResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TestCaseCreate", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^class TestCaseCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TestCaseResponse", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^class TestCaseResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TestCaseUpdate", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^class TestCaseUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_test_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^async def create_test_case($/", "language": "Python", "kind": "function", "signature": "( test_case_data: TestCaseCreate, current_user: User = Depends(require_permission(Permission.CREATE_TEST_CASE)), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "delete_test_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^async def delete_test_case($/", "language": "Python", "kind": "function", "signature": "( case_id: str, current_user: User = Depends(require_permission(Permission.DELETE_TEST_CASE)), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    description: str = None$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TestCaseUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    description: str = \"\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TestCaseCreate", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    error: str = None$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "StandardResponse", "scopeKind": "class"}, {"_type": "tag", "name": "from_attributes", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^        from_attributes = True$/", "language": "Python", "kind": "variable", "scope": "TestCaseResponse.Config", "scopeKind": "class"}, {"_type": "tag", "name": "get_test_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^async def get_test_case($/", "language": "Python", "kind": "function", "signature": "( case_id: str, current_user: User = Depends(require_permission(Permission.READ_TEST_CASE)), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "list_test_cases", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^async def list_test_cases($/", "language": "Python", "kind": "function", "signature": "( test_script_id: Optional[str] = Query(None), name: Optional[str] = Query(None), page: int = Query(1, ge=1), page_size: int = Query(10, ge=1, le=100), current_user: User = Depends(require_permission(Permission.READ_TEST_CASE)), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    name: str = None$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TestCaseUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^router = APIRouter(prefix=\"\\/cases\", tags=[\"test-cases\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_test_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^async def update_test_case($/", "language": "Python", "kind": "function", "signature": "( case_id: str, test_case_data: TestCaseUpdate, current_user: User = Depends(require_permission(Permission.UPDATE_TEST_CASE)), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "variables", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    variables: Dict[str, Any] = None$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "TestCaseUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "variables", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    variables: Dict[str, Any] = {}$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "TestCaseCreate", "scopeKind": "class"}], "hash": "6da95f30af604c8e60615bd6604b2f98", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/api/routers/cases.py", "fields": [{"name": "str description", "scope": "TestCaseUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str error", "scope": "StandardResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "from_attributes = True", "scope": "TestCaseResponse.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "str name", "scope": "TestCaseUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(prefix=\"\\/cases\", tags=[\"test-cases\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, Any] variables", "scope": "TestCaseUpdate", "scopeKind": "class", "description": "unavailable"}]}