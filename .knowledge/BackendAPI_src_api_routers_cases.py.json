{"is_source_file": true, "format": "Python", "description": "Source code for FastAPI endpoints managing test cases, including creation, listing, retrieval, updating, and deletion of test case entities, with database interactions and role-based access control.", "external_files": ["../auth", "../database", "../models"], "external_methods": ["require_roles", "get_db", "TestCase", "TestScript"], "published": ["router"], "classes": [{"name": "TestCaseIn", "description": "Pydantic model for input data when creating or updating test cases."}, {"name": "TestCaseOut", "description": "Pydantic model for output data representing test case details."}], "methods": [{"name": "create_case( payload: TestCaseIn, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\")), )", "description": "Creates a new test case after validating the associated test script and role permissions.", "scope": "", "scopeKind": ""}, {"name": "list_cases( test_script_id: Optional[int] = Query(None), name: Optional[str] = Query(None), page: int = Query(1, ge=1), page_size: int = Query(20, ge=1, le=100), db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\", \"viewer\")), )", "description": "Lists all test cases with optional filtering by script ID and name, supporting pagination.", "scope": "", "scopeKind": ""}, {"name": "get_case( case_id: int, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\", \"viewer\")), )", "description": "Retrieves details of a specific test case by ID.", "scope": "", "scopeKind": ""}, {"name": "update_case( case_id: int, payload: TestCaseIn, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\")), )", "description": "Updates an existing test case, validating inputs and permissions.", "scope": "", "scopeKind": ""}, {"name": "delete_case( case_id: int, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\")), )", "description": "Deletes a specific test case after permission checks.", "scope": "", "scopeKind": ""}], "calls": ["db.query(TestScript).get()", "db.query(TestCase).get()", "db.add()", "db.commit()", "db.refresh()", "db.delete()"], "search-terms": ["FastAPI test case router", "test case CRUD endpoints", "role-based access control", "SQLAlchemy test case model", "Pydantic TestCaseIn and Out"], "state": 2, "file_id": 11, "knowledge_revision": 23, "git_revision": "", "ctags": [{"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "TestCaseOut", "scopeKind": "class"}, {"_type": "tag", "name": "TestCaseIn", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^class TestCaseIn(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TestCaseOut", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^class TestCaseOut(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^def create_case($/", "language": "Python", "kind": "function", "signature": "( payload: TestCaseIn, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\")), )"}, {"_type": "tag", "name": "delete_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^def delete_case($/", "language": "Python", "kind": "function", "signature": "( case_id: int, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\")), )"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    description: Optional[str] = Field(None, description=\"Description\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "TestCaseIn", "scopeKind": "class"}, {"_type": "tag", "name": "from_attributes", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^        from_attributes = True$/", "language": "Python", "kind": "variable", "scope": "TestCaseOut.Config", "scopeKind": "class"}, {"_type": "tag", "name": "get_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^def get_case($/", "language": "Python", "kind": "function", "signature": "( case_id: int, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\", \"viewer\")), )"}, {"_type": "tag", "name": "list_cases", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^def list_cases($/", "language": "Python", "kind": "function", "signature": "( test_script_id: Optional[int] = Query(None), name: Optional[str] = Query(None), page: int = Query(1, ge=1), page_size: int = Query(20, ge=1, le=100), db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\", \"viewer\")), )"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    name: str = Field(..., description=\"Case name\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TestCaseIn", "scopeKind": "class"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "test_script_id", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    test_script_id: int = Field(..., description=\"Parent script ID\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "TestCaseIn", "scopeKind": "class"}, {"_type": "tag", "name": "update_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^def update_case($/", "language": "Python", "kind": "function", "signature": "( case_id: int, payload: TestCaseIn, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\")), )"}, {"_type": "tag", "name": "variables", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    variables: Optional[dict] = Field(None, description=\"Variables mapping\")$/", "language": "Python", "typeref": "typename:Optional[dict]", "kind": "variable", "scope": "TestCaseIn", "scopeKind": "class"}], "hash": "be8bfdfbfe28fd800f490e9f76cbacf7", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/api/routers/cases.py", "fields": [{"name": "Optional[str] description", "scope": "TestCaseIn", "scopeKind": "class", "description": "unavailable"}, {"name": "from_attributes = True", "scope": "TestCaseOut.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "str name", "scope": "TestCaseIn", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int test_script_id", "scope": "TestCaseIn", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[dict] variables", "scope": "TestCaseIn", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"23": ""}]}