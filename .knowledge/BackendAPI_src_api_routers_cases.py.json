{"is_source_file": true, "format": "Python", "description": "This file defines a FastAPI router with endpoints for managing test cases, including create, list, retrieve, update, and delete operations. It uses Pydantic models, SQLAlchemy ORM models, and dependency injection for database sessions, representing a backend API module for test case management within a test script management system.", "external_files": ["src/database/connection.py", "src/database/models.py"], "external_methods": ["get_db (from src.database.connection)", "TestScript (from src.database.models)", "TestCase (from src.database.models)", "TestCaseResponse.from_orm"], "published": ["router"], "classes": [{"name": "TestCaseCreate", "description": "Pydantic model for creating a new test case, including fields for test script ID, name, description, and variables."}, {"name": "TestCaseUpdate", "description": "Pydantic model for updating a test case, allowing optional fields for name, description, and variables."}, {"name": "TestCaseResponse", "description": "Pydantic model representing the serialized form of a test case with all details, including timestamps."}, {"name": "StandardResponse", "description": "Standardized response model indicating success state, data, and error message."}, {"name": "PaginationResponse", "description": "Model for paginated list of test cases, including total count, current page, page size, and list of items."}], "methods": [{"name": "create_test_case( test_case_data: TestCaseCreate, db: Session = Depends(get_db) )", "description": "Handles POST requests to create a new test case after verifying the associated test script exists.", "scope": "", "scopeKind": ""}, {"name": "list_test_cases( test_script_id: Optional[str] = Query(None), name: Optional[str] = Query(None), page: int = Query(1, ge=1), page_size: int = Query(10, ge=1, le=100), db: Session = Depends(get_db) )", "description": "Handles GET requests to retrieve a paginated and optionally filtered list of test cases.", "scope": "", "scopeKind": ""}, {"name": "get_test_case( case_id: str, db: Session = Depends(get_db) )", "description": "Handles GET requests to fetch details of a specific test case by ID.", "scope": "", "scopeKind": ""}, {"name": "update_test_case( case_id: str, test_case_data: TestCaseUpdate, db: Session = Depends(get_db) )", "description": "Handles PUT requests to update fields of an existing test case by ID.", "scope": "", "scopeKind": ""}, {"name": "delete_test_case( case_id: str, db: Session = Depends(get_db) )", "description": "Handles DELETE requests to remove a test case by ID.", "scope": "", "scopeKind": ""}], "calls": ["db.query(TestScript).filter(TestScript.id == test_case_data.test_script_id).first()", "db.query(TestCase).filter(TestCase.id == case_id).first()", "db.add(test_case)", "db.commit()", "db.refresh(test_case)", "db.delete(test_case)"], "search-terms": ["test case API", "create test case", "list test cases", "retrieve test case", "update test case", "delete test case", "FastAPI test case router", "SQLAlchemy TestCase model", "Pydantic TestCaseResponse"], "state": 2, "file_id": 14, "knowledge_revision": 86, "git_revision": "a629b5b37c9b16cb48c78d6cf5fe937d10ef54ad", "revision_history": [{"34": ""}, {"38": ""}, {"86": "a629b5b37c9b16cb48c78d6cf5fe937d10ef54ad"}], "ctags": [{"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "TestCaseResponse", "scopeKind": "class"}, {"_type": "tag", "name": "PaginationResponse", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^class PaginationResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SYSTEM_USER_ID", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^SYSTEM_USER_ID = \"system\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "StandardResponse", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^class StandardResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TestCaseCreate", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^class TestCaseCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TestCaseResponse", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^class TestCaseResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TestCaseUpdate", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^class TestCaseUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_test_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^async def create_test_case($/", "language": "Python", "kind": "function", "signature": "( test_case_data: TestCaseCreate, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "delete_test_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^async def delete_test_case($/", "language": "Python", "kind": "function", "signature": "( case_id: str, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    description: str = None$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TestCaseUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    description: str = \"\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TestCaseCreate", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    error: str = None$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "StandardResponse", "scopeKind": "class"}, {"_type": "tag", "name": "from_attributes", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^        from_attributes = True$/", "language": "Python", "kind": "variable", "scope": "TestCaseResponse.Config", "scopeKind": "class"}, {"_type": "tag", "name": "get_test_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^async def get_test_case($/", "language": "Python", "kind": "function", "signature": "( case_id: str, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "list_test_cases", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^async def list_test_cases($/", "language": "Python", "kind": "function", "signature": "( test_script_id: Optional[str] = Query(None), name: Optional[str] = Query(None), page: int = Query(1, ge=1), page_size: int = Query(10, ge=1, le=100), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    name: str = None$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TestCaseUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^router = APIRouter(prefix=\"\\/cases\", tags=[\"test-cases\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_test_case", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^async def update_test_case($/", "language": "Python", "kind": "function", "signature": "( case_id: str, test_case_data: TestCaseUpdate, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "variables", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    variables: Dict[str, Any] = None$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "TestCaseUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "variables", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/cases.py", "pattern": "/^    variables: Dict[str, Any] = {}$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "TestCaseCreate", "scopeKind": "class"}], "hash": "4a793ef123bff13041724b84d1a7d322", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/api/routers/cases.py", "fields": [{"name": "SYSTEM_USER_ID = \"system\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str description", "scope": "TestCaseUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str error", "scope": "StandardResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "from_attributes = True", "scope": "TestCaseResponse.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "str name", "scope": "TestCaseUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(prefix=\"\\/cases\", tags=[\"test-cases\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, Any] variables", "scope": "TestCaseUpdate", "scopeKind": "class", "description": "unavailable"}]}