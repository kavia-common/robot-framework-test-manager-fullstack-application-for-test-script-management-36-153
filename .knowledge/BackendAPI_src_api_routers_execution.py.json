{"is_source_file": true, "format": "Python", "description": "FastAPI router module defining an API endpoint for executing test cases, handling both ad-hoc and queued execution modes, with validation and interaction with the database and services.", "external_files": ["src/database/connection.py", "src/database/models.py", "src/services/execution_service.py", "src/services/queue_service.py"], "external_methods": ["get_db", "execution_service.execute_multiple_test_cases", "queue_service.add_to_queue"], "published": ["router", "ExecutionRequest", "StandardResponse"], "classes": [{"name": "ExecutionRequest", "description": "Pydantic model representing the request payload for executing test cases."}, {"name": "StandardResponse", "description": "Pydantic model for standard API responses indicating success, data, and errors."}], "methods": [{"name": "execute_test_cases( execution_request: ExecutionRequest, db: Session = Depends(get_db) )", "description": "Asynchronous endpoint function that processes incoming execution requests, validates test case existence, and initiates execution or queues the tests based on the specified run type.", "scope": "", "scopeKind": ""}], "calls": ["db.query", "db.query(TestCase).filter(...).first", "execution_service.execute_multiple_test_cases", "queue_service.add_to_queue", "HTTPException", "status.HTTP_400_BAD_REQUEST", "status.HTTP_200_OK"], "search-terms": ["FastAPI execution endpoint", "test case execution", "async API handler", "SQLAlchemy test case validation", "queue service integration"], "state": 2, "file_id": 15, "knowledge_revision": 87, "git_revision": "a629b5b37c9b16cb48c78d6cf5fe937d10ef54ad", "revision_history": [{"36": ""}, {"39": ""}, {"87": "a629b5b37c9b16cb48c78d6cf5fe937d10ef54ad"}], "ctags": [{"_type": "tag", "name": "ExecutionRequest", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^class ExecutionRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SYSTEM_USER_ID", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^SYSTEM_USER_ID = \"system\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "StandardResponse", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^class StandardResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^    config: Dict[str, Any] = {}$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "ExecutionRequest", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^    error: str = None$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "StandardResponse", "scopeKind": "class"}, {"_type": "tag", "name": "execute_test_cases", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^async def execute_test_cases($/", "language": "Python", "kind": "function", "signature": "( execution_request: ExecutionRequest, db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^router = APIRouter(prefix=\"\\/execute\", tags=[\"execution\"])$/", "language": "Python", "kind": "variable"}], "hash": "c372ac823245e13ee7733c338892939d", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/api/routers/execution.py", "fields": [{"name": "SYSTEM_USER_ID = \"system\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, Any] config", "scope": "ExecutionRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str error", "scope": "StandardResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(prefix=\"\\/execute\", tags=[\"execution\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}