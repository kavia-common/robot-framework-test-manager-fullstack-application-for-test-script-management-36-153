{"is_source_file": true, "format": "Python", "description": "This file defines a FastAPI router with an endpoint to execute test cases, either immediately or by queuing them. It includes request and response models, and references external services and database models related to executing test cases.", "external_files": [".../database/connection", ".../database/models", ".../auth/rbac", ".../services/execution_service", ".../services/queue_service"], "external_methods": ["get_db", "require_permission", "execution_service.execute_multiple_test_cases", "queue_service.add_to_queue"], "published": ["execute_test_cases"], "classes": [{"name": "ExecutionRequest", "description": "Pydantic model representing the request payload for executing test cases, including case IDs, run type, and optional configuration."}, {"name": "StandardResponse", "description": "Pydantic model representing the standard structure of responses from the execution endpoint, indicating success status, data, and error message."}], "methods": [{"name": "execute_test_cases( execution_request: ExecutionRequest, current_user: User = Depends(require_permission(Permission.EXECUTE_TEST)), db: Session = Depends(get_db) )", "description": "Asynchronous endpoint for executing test cases based on provided request data. Validates test cases, decides between immediate execution or queuing, and handles exceptions.", "scope": "", "scopeKind": ""}], "calls": ["db.query", "db.query(TestCase).filter(TestCase.id == case_id).first", "execution_service.execute_multiple_test_cases", "queue_service.add_to_queue", "raise HTTPException"], "search-terms": ["FastAPI execution endpoint", "test case execution", "queue test cases", "RBAC permission dependency", "execution service", "queue service"], "state": 2, "file_id": 15, "knowledge_revision": 39, "git_revision": "", "revision_history": [{"36": ""}, {"39": ""}], "ctags": [{"_type": "tag", "name": "ExecutionRequest", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^class ExecutionRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "StandardResponse", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^class StandardResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^    config: Dict[str, Any] = {}$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "ExecutionRequest", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^    error: str = None$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "StandardResponse", "scopeKind": "class"}, {"_type": "tag", "name": "execute_test_cases", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^async def execute_test_cases($/", "language": "Python", "kind": "function", "signature": "( execution_request: ExecutionRequest, current_user: User = Depends(require_permission(Permission.EXECUTE_TEST)), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/execution.py", "pattern": "/^router = APIRouter(prefix=\"\\/execute\", tags=[\"execution\"])$/", "language": "Python", "kind": "variable"}], "hash": "35391af464e6cfd2538d95285be39b34", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/api/routers/execution.py", "fields": [{"name": "Dict[str, Any] config", "scope": "ExecutionRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str error", "scope": "StandardResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(prefix=\"\\/execute\", tags=[\"execution\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}