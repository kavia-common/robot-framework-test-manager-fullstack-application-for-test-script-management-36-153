{"is_source_file": true, "format": "Python", "description": "This file defines application configuration settings using Pydantic for data validation. It includes a Settings class with configuration attributes for database, JWT, and MinIO storage, along with a function to load these settings from environment variables, memoized with an LRU cache.", "external_files": ["pydantic"], "external_methods": ["os.getenv"], "published": ["get_settings"], "classes": [{"name": "Settings", "description": "A Pydantic BaseModel that encapsulates application configuration parameters such as database URL, JWT secret, expiry, and MinIO storage details."}], "methods": [{"name": "Settings get_settings()", "description": "Loads and caches settings from environment variables, returning an instance of Settings with default values if variables are not set.", "scope": "", "scopeKind": ""}, {"name": "timedelta jwt_expires_delta(self)", "scope": "Settings", "scopeKind": "class", "description": "unavailable"}], "calls": ["functools.lru_cache", "os.getenv", "Settings"], "search-terms": ["app_config", "Settings", "environment configuration", "JWT", "MinIO", "load settings", "environment variables"], "state": 2, "file_id": 5, "knowledge_revision": 12, "git_revision": "", "ctags": [{"_type": "tag", "name": "Settings", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/app_config.py", "pattern": "/^class Settings(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "get_settings", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/app_config.py", "pattern": "/^def get_settings() -> Settings:$/", "language": "Python", "typeref": "typename:Settings", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "jwt_expires_delta", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/app_config.py", "pattern": "/^    def jwt_expires_delta(self) -> timedelta:$/", "language": "Python", "typeref": "typename:timedelta", "kind": "member", "signature": "(self)", "scope": "Settings", "scopeKind": "class"}], "hash": "561285a5607688d518f6e2153786f43d", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/api/app_config.py", "revision_history": [{"12": ""}]}