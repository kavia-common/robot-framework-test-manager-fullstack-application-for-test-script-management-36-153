{"is_source_file": true, "format": "Python", "description": "This file defines FastAPI API routes for managing test scripts, including creation, listing, retrieval, updating, and deletion. It uses models, dependency injection, and database sessions.", "external_files": ["../auth", "../database", "../models"], "external_methods": ["require_roles", "get_db", "TestScript"], "published": ["router"], "classes": [{"name": "TestScriptIn", "description": "Pydantic model for input data of test script, including name, description, and metadata."}, {"name": "TestScriptOut", "description": "Pydantic model for output data of test script, including id, name, description, and metadata with attribute configuration."}], "methods": [{"name": "create_test_script( payload: TestScriptIn, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\")), )", "description": "Handles POST requests to create a new test script, validating input, checking for duplicates, and saving to the database.", "scope": "", "scopeKind": ""}, {"name": "list_test_scripts( page: int = Query(1, ge=1), page_size: int = Query(20, ge=1, le=100), db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\", \"viewer\")), )", "description": "Handles GET requests to list test scripts, supporting pagination and roles-based access control.", "scope": "", "scopeKind": ""}, {"name": "get_test_script( test_id: int, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\", \"viewer\")), )", "description": "Handles GET requests to retrieve a specific test script by its ID, raising 404 if not found.", "scope": "", "scopeKind": ""}, {"name": "update_test_script( test_id: int, payload: TestScriptIn, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\")), )", "description": "Handles PUT requests to update an existing test script identified by ID.", "scope": "", "scopeKind": ""}, {"name": "delete_test_script( test_id: int, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\")), )", "description": "Handles DELETE requests to delete a test script by ID, raising 404 if not found.", "scope": "", "scopeKind": ""}], "calls": ["db.query(TestScript)", "db.add(ts)", "db.commit()", "db.refresh(ts)", "db.delete(ts)"], "search-terms": ["FastAPI test script management", "TestScript ORM", "API routes for test scripts", "CRUD test scripts", "SQLAlchemy session dependency"], "state": 2, "file_id": 10, "knowledge_revision": 42, "git_revision": "b566aa8e2a5fcced96ab529673eac204d910f624", "revision_history": [{"21": ""}, {"42": "b566aa8e2a5fcced96ab529673eac204d910f624"}], "ctags": [{"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "TestScriptOut", "scopeKind": "class"}, {"_type": "tag", "name": "TestScriptIn", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^class TestScriptIn(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TestScriptOut", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^class TestScriptOut(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_test_script", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^def create_test_script($/", "language": "Python", "kind": "function", "signature": "( payload: TestScriptIn, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\")), )"}, {"_type": "tag", "name": "delete_test_script", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^def delete_test_script($/", "language": "Python", "kind": "function", "signature": "( test_id: int, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\")), )"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^    description: Optional[str] = Field(None, description=\"Description\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "TestScriptIn", "scopeKind": "class"}, {"_type": "tag", "name": "from_attributes", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^        from_attributes = True$/", "language": "Python", "kind": "variable", "scope": "TestScriptOut.Config", "scopeKind": "class"}, {"_type": "tag", "name": "get_test_script", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^def get_test_script($/", "language": "Python", "kind": "function", "signature": "( test_id: int, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\", \"viewer\")), )"}, {"_type": "tag", "name": "list_test_scripts", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^def list_test_scripts($/", "language": "Python", "kind": "function", "signature": "( page: int = Query(1, ge=1), page_size: int = Query(20, ge=1, le=100), db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\", \"viewer\")), )"}, {"_type": "tag", "name": "metadata", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^    metadata: Optional[dict] = Field(None, description=\"Arbitrary metadata\")$/", "language": "Python", "typeref": "typename:Optional[dict]", "kind": "variable", "scope": "TestScriptIn", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^    name: str = Field(..., description=\"Test script name\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TestScriptIn", "scopeKind": "class"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_test_script", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/api/routers/tests.py", "pattern": "/^def update_test_script($/", "language": "Python", "kind": "function", "signature": "( test_id: int, payload: TestScriptIn, db: Session = Depends(get_db), _: Any = Depends(require_roles(\"admin\", \"tester\")), )"}], "hash": "801ffb0de61893e0bd698bde671514cc", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/api/routers/tests.py", "fields": [{"name": "Optional[str] description", "scope": "TestScriptIn", "scopeKind": "class", "description": "unavailable"}, {"name": "from_attributes = True", "scope": "TestScriptOut.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[dict] metadata", "scope": "TestScriptIn", "scopeKind": "class", "description": "unavailable"}, {"name": "str name", "scope": "TestScriptIn", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}