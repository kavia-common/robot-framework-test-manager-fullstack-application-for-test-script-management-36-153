{"is_source_file": true, "format": "Python", "description": "This file defines the ExecutionService class, which manages test execution, queuing, run history, and related operations in a test management system, including interactions with databases and external storage for logs.", "external_files": ["src.database.models", "src.schemas.test_schemas", "src.services.storage_service"], "external_methods": ["storage_service.get_log_url"], "published": ["execution_service"], "classes": [{"name": "ExecutionService", "description": "Service class responsible for managing test execution, queue management, and run history retrieval."}], "methods": [{"name": "List[QueueItemResponse] add_to_queue(self, db: Session, case_ids: List[str], user_id: str)", "description": "Adds test cases to the execution queue if they are not already queued or completed.", "scope": "ExecutionService", "scopeKind": "class"}, {"name": "List[QueueItemResponse] get_queue(self, db: Session)", "description": "Retrieves all items currently in the execution queue, ordered by priority and queued time.", "scope": "ExecutionService", "scopeKind": "class"}, {"name": "bool remove_from_queue(self, db: Session, case_id: str)", "description": "Removes a specific test case from the execution queue.", "scope": "ExecutionService", "scopeKind": "class"}, {"name": "List[str] execute_tests( self, db: Session, case_ids: List[str], run_type: str, user_id: str )", "description": "Creates run history entries for a list of test cases and optionally adds them to the queue for execution.", "scope": "ExecutionService", "scopeKind": "class"}, {"name": "PaginationResponse get_run_history( self, db: Session, case_id: Optional[str] = None, status: Optional[str] = None, page: int = 1, page_size: int = 20 )", "description": "Retrieves paginated run history entries, with optional filtering by test case ID and status.", "scope": "ExecutionService", "scopeKind": "class"}, {"name": "Optional[RunHistoryResponse] get_run_details(self, db: Session, run_id: str)", "description": "Provides detailed information about a specific test run, including its logs.", "scope": "ExecutionService", "scopeKind": "class"}, {"name": "Optional[str] get_logs(self, db: Session, run_id: str)", "description": "Fetches the URL of logs associated with a specific test run.", "scope": "ExecutionService", "scopeKind": "class"}], "calls": ["db.query", "db.add", "db.commit", "db.delete", "storage_service.get_log_url", "logger.info", "logger.error"], "search-terms": ["ExecutionService", "queue management", "run history", "test execution", "log retrieval", "storage_service", "test case IDs", "test run details"], "state": 2, "file_id": 16, "knowledge_revision": 78, "git_revision": "", "revision_history": [{"33": ""}, {"78": ""}], "ctags": [{"_type": "tag", "name": "ExecutionService", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/execution_service.py", "pattern": "/^class ExecutionService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "add_to_queue", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/execution_service.py", "pattern": "/^    def add_to_queue(self, db: Session, case_ids: List[str], user_id: str) -> List[QueueItemResp/", "language": "Python", "typeref": "typename:List[QueueItemResponse]", "kind": "member", "signature": "(self, db: Session, case_ids: List[str], user_id: str)", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "execute_tests", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/execution_service.py", "pattern": "/^    async def execute_tests($/", "language": "Python", "typeref": "typename:List[str]", "kind": "member", "signature": "( self, db: Session, case_ids: List[str], run_type: str, user_id: str )", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "execution_service", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/execution_service.py", "pattern": "/^execution_service = ExecutionService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_logs", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/execution_service.py", "pattern": "/^    def get_logs(self, db: Session, run_id: str) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "member", "signature": "(self, db: Session, run_id: str)", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "get_queue", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/execution_service.py", "pattern": "/^    def get_queue(self, db: Session) -> List[QueueItemResponse]:$/", "language": "Python", "typeref": "typename:List[QueueItemResponse]", "kind": "member", "signature": "(self, db: Session)", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "get_run_details", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/execution_service.py", "pattern": "/^    def get_run_details(self, db: Session, run_id: str) -> Optional[RunHistoryResponse]:$/", "language": "Python", "typeref": "typename:Optional[RunHistoryResponse]", "kind": "member", "signature": "(self, db: Session, run_id: str)", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "get_run_history", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/execution_service.py", "pattern": "/^    def get_run_history($/", "language": "Python", "typeref": "typename:PaginationResponse", "kind": "member", "signature": "( self, db: Session, case_id: Optional[str] = None, status: Optional[str] = None, page: int = 1, page_size: int = 20 )", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/execution_service.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "remove_from_queue", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/execution_service.py", "pattern": "/^    def remove_from_queue(self, db: Session, case_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, db: Session, case_id: str)", "scope": "ExecutionService", "scopeKind": "class"}], "hash": "71c4c59f4da4648212f2f9299935937d", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/services/execution_service.py", "fields": [{"name": "execution_service = ExecutionService()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}