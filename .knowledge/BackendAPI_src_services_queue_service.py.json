{"is_source_file": true, "format": "Python", "description": "This file defines the QueueService class that manages a test execution queue within a testing framework. It includes methods for adding, removing, retrieving status, processing, and cleaning completed queue items, integrating database models and an external execution service.", "external_files": ["../database/models", "../database/connection", "./execution_service"], "external_methods": ["get_db_context", "execution_service.execute_test_case"], "published": ["queue_service"], "classes": [{"name": "QueueService", "description": "A service class responsible for managing test case execution queues, including adding, removing, processing, and cleaning queued items."}], "methods": [{"name": "List[str] add_to_queue(self, case_ids: List[str], priority: int = 1, config: Dict[str, Any] = None)", "description": "Adds test cases to the execution queue, avoiding duplicates and non-existent cases, returning the list of created queue item IDs.", "scope": "QueueService", "scopeKind": "class"}, {"name": "bool remove_from_queue(self, case_id: str)", "description": "Removes a test case from the queue if it is queued, returning True if successful.", "scope": "QueueService", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] get_queue_status(self)", "description": "Returns a list of current queue items with their statuses, priorities, and timestamps.", "scope": "QueueService", "scopeKind": "class"}, {"name": "process_queue(self, user_id: str, max_concurrent: int = 1)", "description": "Asynchronous method that processes queued items concurrently, updating their status and handling execution via an external service.", "scope": "QueueService", "scopeKind": "class"}, {"name": "clear_completed_items(self, older_than_hours: int = 24)", "description": "Deletes queue items marked as completed or failed older than a specified number of hours.", "scope": "QueueService", "scopeKind": "class"}], "calls": ["get_db_context", "execution_service.execute_test_case"], "search-terms": ["QueueService", "test execution queue", "add_to_queue", "process_queue", "remove_from_queue", "clear_completed_items", "QueueItem", "QueueStatus"], "state": 2, "file_id": 11, "knowledge_revision": 28, "git_revision": "", "revision_history": [{"23": ""}, {"28": ""}], "ctags": [{"_type": "tag", "name": "QueueService", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/queue_service.py", "pattern": "/^class QueueService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "add_to_queue", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/queue_service.py", "pattern": "/^    def add_to_queue(self, case_ids: List[str], priority: int = 1, config: Dict[str, Any] = None/", "language": "Python", "typeref": "typename:List[str]", "kind": "member", "signature": "(self, case_ids: List[str], priority: int = 1, config: Dict[str, Any] = None)", "scope": "QueueService", "scopeKind": "class"}, {"_type": "tag", "name": "clear_completed_items", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/queue_service.py", "pattern": "/^    def clear_completed_items(self, older_than_hours: int = 24):$/", "language": "Python", "kind": "member", "signature": "(self, older_than_hours: int = 24)", "scope": "QueueService", "scopeKind": "class"}, {"_type": "tag", "name": "get_queue_status", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/queue_service.py", "pattern": "/^    def get_queue_status(self) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self)", "scope": "QueueService", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/queue_service.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "process_queue", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/queue_service.py", "pattern": "/^    async def process_queue(self, user_id: str, max_concurrent: int = 1):$/", "language": "Python", "kind": "member", "signature": "(self, user_id: str, max_concurrent: int = 1)", "scope": "QueueService", "scopeKind": "class"}, {"_type": "tag", "name": "queue_service", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/queue_service.py", "pattern": "/^queue_service = QueueService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "remove_from_queue", "path": "/home/kavia/workspace/code-generation/robot-framework-test-manager-fullstack-application-for-test-script-management-36-153/BackendAPI/src/services/queue_service.py", "pattern": "/^    def remove_from_queue(self, case_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, case_id: str)", "scope": "QueueService", "scopeKind": "class"}], "hash": "ee8db7db67cd76c060d9f5aaaa7dd453", "format-version": 4, "code-base-name": "BackendAPI", "filename": "BackendAPI/src/services/queue_service.py", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "queue_service = QueueService()", "scope": "", "scopeKind": "", "description": "unavailable"}]}