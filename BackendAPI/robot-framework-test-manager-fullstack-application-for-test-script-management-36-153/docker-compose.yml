version: "3.9"

name: rf-test-manager

networks:
  app-net:
    driver: bridge

volumes:
  pg_data:
  minio_data:

services:
  db:
    image: postgres:16-alpine
    container_name: rf-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-rfuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-rfpassword}
      - POSTGRES_DB=${POSTGRES_DB:-rfdb}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-rfuser} -d ${POSTGRES_DB:-rfdb}"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2024-09-22T00-33-43Z
    container_name: rf-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    ports:
      - "${MINIO_PORT_API:-9000}:9000"
      - "${MINIO_PORT_CONSOLE:-9001}:9001"
    volumes:
      - minio_data:/data
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./BackendAPI
      dockerfile: Dockerfile
    container_name: rf-backend
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql+psycopg2://${POSTGRES_USER:-rfuser}:${POSTGRES_PASSWORD:-rfpassword}@db:5432/${POSTGRES_DB:-rfdb}}
      - JWT_SECRET=${JWT_SECRET:-devsecret}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-60}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio:9000}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_BUCKET=${MINIO_BUCKET:-rf-test-manager}
      - CORS_ALLOW_ORIGINS=${CORS_ALLOW_ORIGINS:-http://localhost:3000}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/ || curl -fsS http://localhost:8000/"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ../robot-framework-test-manager-fullstack-application-for-test-script-management-36-154/FrontendUI
      dockerfile: Dockerfile
    container_name: rf-frontend
    environment:
      - REACT_APP_API_BASE=${REACT_APP_API_BASE:-http://localhost:8000}
      - PORT=3000
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000 || curl -fsS http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5
