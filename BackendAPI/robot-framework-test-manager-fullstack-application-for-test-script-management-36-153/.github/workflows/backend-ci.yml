name: BackendAPI CI

on:
  push:
    paths:
      - "BackendAPI/**"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    paths:
      - "BackendAPI/**"
      - ".github/workflows/backend-ci.yml"

jobs:
  lint-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: BackendAPI
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint (flake8)
        run: |
          flake8 src

      - name: Run tests (pytest)
        env:
          # Use sqlite for CI tests to avoid DB dependency
          DATABASE_URL: "sqlite:///./app.db"
          JWT_SECRET: "ci-secret"
          MINIO_ENDPOINT: "localhost:9000"
          MINIO_ACCESS_KEY: "minioadmin"
          MINIO_SECRET_KEY: "minioadmin"
          MINIO_BUCKET: "rf-test-manager"
        run: |
          # Start a lightweight Minio using docker for presigned URL and put operations in tests
          docker run -d -p 9000:9000 -p 9001:9001 -e MINIO_ROOT_USER=minioadmin -e MINIO_ROOT_PASSWORD=minioadmin --name ci-minio minio/minio:RELEASE.2024-09-22T00-33-43Z server /data --console-address ":9001"
          # Wait for minio
          for i in {1..20}; do if curl -fsS http://localhost:9000/minio/health/ready >/dev/null; then break; fi; sleep 2; done
          pytest -q

      - name: Stop Minio
        if: always()
        run: docker rm -f ci-minio || true

  docker-build:
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build BackendAPI image
        run: docker build -t backendapi:ci ./BackendAPI
